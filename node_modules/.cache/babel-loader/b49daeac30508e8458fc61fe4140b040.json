{"ast":null,"code":"import _objectSpread from \"/Users/techi.s./Desktop/react101/counter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport var initialState = {\n  count: 0\n};\nexport var counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      return _objectSpread({}, state, {\n        count: state.count + action.payload\n      });\n\n    case \"DECREMENT\":\n      return _objectSpread({}, state, {\n        count: state.count - action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialState","count","counterReducer","state","action","type","payload"],"sources":["/Users/techi.s./Desktop/react101/counter/src/redux/reducers/counterReducer.js"],"sourcesContent":["export const initialState = {\n  count: 0,\n};\n\nexport const counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        ...state,\n        count: state.count + action.payload,\n      };\n    case \"DECREMENT\":\n      return {\n        ...state,\n        count: state.count - action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"],"mappings":";AAAA,OAAO,IAAMA,YAAY,GAAG;EAC1BC,KAAK,EAAE;AADmB,CAArB;AAIP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EAC9D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,WAAL;MACE,yBACKF,KADL;QAEEF,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE;MAF9B;;IAIF,KAAK,WAAL;MACE,yBACKH,KADL;QAEEF,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE;MAF9B;;IAIF;MACE,OAAOH,KAAP;EAZJ;AAcD,CAfM"},"metadata":{},"sourceType":"module"}